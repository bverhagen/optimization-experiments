before_script:
    - sed -i 's/git@github.com:/https:\/\/github.com\//' .gitmodules
    - apt-get update -qq && apt-get install --yes -qq cmake python3 scons gcc clang

stages:
    - build
    - test

build-all:
    script: "./exec.py init build --target all --compiler gcc clang"
    stage: build

unittest:
    script: "./exec.py init build run --target all --run unittest --compiler gcc clang"
    stage: test

run-benchmarks-gcc:
    script: "./exec.py init build run --target all --run performance --compiler gcc"
    stage: test

run-benchmarks-clang:
    script: "./exec.py init build run --target all --run performance --compiler clang"
    stage: test

valgrind:
    script: 
        - apt-get install --yes -qq valgrind
        - "./exec.py init build run --target all --run unittest --valgrind --compiler gcc clang"
    stage: test

cppcheck:
    script: 
        - apt-get install --yes -qq cppcheck unzip
        - "./exec.py analyze -a cppcheck"
    stage: test

clang-static-analyzer:
    script: "./exec.py init analyze -a clang"
    stage: test

pmd-cpd:
    script: 
        - apt-get install --yes -qq default-jre unzip
        - "./exec.py analyze -a cpd"
    stage: test

python2-compatibility:
    script:
        - apt-get install --yes -qq valgrind cppcheck unzip default-jre
        - "python2 exec.py distclean clean init build run rebuild analyze -m release -t all -r all -c gcc clang -a clang cppcheck"
        - "python2 exec.py build run --run unittest --valgrind"
    stage: test

perf-profiling:
    script:
        - apt-get install --yes -qq linux-tools
        - ./exec.py init build run --profile-method perf -r performance
    stage: test
