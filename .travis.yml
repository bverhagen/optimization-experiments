before_install:
    #    - sudo apt-get -qq update
    #    - sudo apt-get install -y cmake python3 valgrind
# Use sed to replace the SSH URL with the public URL, then initialize submodules
before_install:
    - sed -i 's/git@github.com:/https:\/\/github.com\//' .gitmodules

install:
    # Install a more recent clang version
    - export CLANG_VERSION=3.9.0 && wget "http://llvm.org/releases/${CLANG_VERSION}/clang+llvm-${CLANG_VERSION}-x86_64-linux-gnu-ubuntu-14.04.tar.xz" -O clang.tar.xz && tar -xvf 'clang.tar.xz' && mv clang+* clang && export PATH=$(pwd)/clang/bin:$PATH
    # Install latest cppcheck
    - wget https://github.com/danmar/cppcheck/archive/master.zip && unzip master.zip && make -C cppcheck-master -j SRCDIR=build CFGDIR=$(pwd)/cppcheck-master/cfg HAVE_RULES=yes CXXFLAGS="-O2 -DNDEBUG -Wall -Wno-sign-compare -Wno-unused-function" && export PATH=$(pwd)/cppcheck-master:$PATH
    - sudo sh -c 'echo 1 >/proc/sys/kernel/perf_event_paranoid'

addons:
    apt:
        packages:
            - cmake
            - python3
            - scons
            - valgrind
            - wget
            - default-jre
            - linux-tools-4.4.0-42-generic
            - linux-tools-generic-lts-trusty

language: c++

compiler: gcc

env:
    - EXEC='init build --target all --compiler gcc'
    - EXEC="init build --target all --compiler clang --toolchain-path ${PWD}/clang/bin"
    - EXEC='init build run --compiler gcc --run unittest --target all'
    - EXEC="init build run --compiler clang --run unittest --target all --toolchain-path ${PWD}/clang/bin"
    - EXEC='init build analyze --analyze-method valgrind --compiler gcc --run unittest --target all'
    - EXEC="init build analyze --analyze-method valgrind --compiler clang --run unittest --target all --toolchain-path ${PWD}/clang/bin"
    - EXEC='init build run --compiler gcc --run performance --target all'
    - EXEC="init build run --compiler clang --run performance --target all --toolchain-path ${PWD}/clang/bin"
    - EXEC='analyze -a cppcheck'
    - EXEC='init analyze -a clang --compiler gcc'
    - EXEC="init analyze -a clang --compiler clang --toolchain-path ${PWD}/clang/bin"
    - EXEC='analyze -a cpd'
    - EXEC='init build profile --compiler gcc --run performance --target all --profile-method perf'

script: 
    - git submodule update --init
    - PWD=$(pwd) ./exec $EXEC

## Hacks to make Travis handle git submodules properly
# Handle git submodules yourself
git:
    submodules: false

# Require sudo for apt
sudo: required

# Hack to get a more up to date version of Ubuntu
dist: trusty
